const LocalStrategy = require('passport-local').Strategy;
const bcrypt = require('bcryptjs');

// Load User Model
const User = require('../models/User');

module.exports = function (passport) {
    passport.use(
        new LocalStrategy({usernameField: 'email'}, (email, password, done) => {
            // Match User
            User.findOne({email: email})
                .then(user => {
                    if(!user){
                        return done(null, false, { message: 'This email does not have an account!'});
                    }

                    // Match password
                    bcrypt.compare(password, user.password, (err, isMatch) => {
                        if(err) throw err;

                        if(isMatch){
                            return done(null, user);
                        } else{
                            return done(null, false, { message: 'Wrong password!'});
                        }
                    });
                })
                .catch(err => console.log(err));
        })
    );

    // Serialize from Passport documentation
    passport.serializeUser((user, done) => {
        done(null, user.id);
    })

    // Deserialize from Passport documentation
    passport.deserializeUser((id, done) => {
        User.findById(id, (err, user) => {
            done(err, user);
        });
    });
}